<?php
/**
 * Custom Post Types.
 *
 * @package callboard
 * @requires ACF
 */

class Callboard_CPT extends Callboard {
	/**
	 * Constants.
	 */
	const POST_TYPE = 'performance';

	/**
	 * Constructor.
	 */
	public function __construct() {
		// `performance` custom Post type.
		add_action( 'init', array( $this, 'callboard_performance_init' ) );
		add_filter( 'post_updated_messages', array( $this, 'callboard_performance_updated_messages' ) );
		add_filter( 'bulk_post_updated_messages', array( $this, 'callboard_performance_bulk_updated_messages' ), 10, 2 );
	}

	/**
	 * Registers the `performance` post type.
	 */
	public function callboard_performance_init() {
		register_post_type(
			self::POST_TYPE,
			[
				'labels'                => [
					'name'                  => __( 'Performances', 'callboard' ),
					'singular_name'         => __( 'Performance', 'callboard' ),
					'all_items'             => __( 'All Performances', 'callboard' ),
					'archives'              => __( 'Performance Archives', 'callboard' ),
					'attributes'            => __( 'Performance Attributes', 'callboard' ),
					'insert_into_item'      => __( 'Insert into Performance', 'callboard' ),
					'uploaded_to_this_item' => __( 'Uploaded to this Performance', 'callboard' ),
					'featured_image'        => _x( 'Featured Image', self::POST_TYPE, 'callboard' ),
					'set_featured_image'    => _x( 'Set featured image', self::POST_TYPE, 'callboard' ),
					'remove_featured_image' => _x( 'Remove featured image', self::POST_TYPE, 'callboard' ),
					'use_featured_image'    => _x( 'Use as featured image', self::POST_TYPE, 'callboard' ),
					'filter_items_list'     => __( 'Filter Performances list', 'callboard' ),
					'items_list_navigation' => __( 'Performances list navigation', 'callboard' ),
					'items_list'            => __( 'Performances list', 'callboard' ),
					'new_item'              => __( 'New Performance', 'callboard' ),
					'add_new'               => __( 'Add New', 'callboard' ),
					'add_new_item'          => __( 'Add New Performance', 'callboard' ),
					'edit_item'             => __( 'Edit Performance', 'callboard' ),
					'view_item'             => __( 'View Performance', 'callboard' ),
					'view_items'            => __( 'View Performances', 'callboard' ),
					'search_items'          => __( 'Search Performances', 'callboard' ),
					'not_found'             => __( 'No Performances found', 'callboard' ),
					'not_found_in_trash'    => __( 'No Performances found in trash', 'callboard' ),
					'parent_item_colon'     => __( 'Parent Performance:', 'callboard' ),
					'menu_name'             => __( 'Performances', 'callboard' ),
				],
				'public'                => true,
				'hierarchical'          => false,
				'show_ui'               => true,
				'show_in_nav_menus'     => true,
				'show_in_graphql'       => true,
				'graphql_single_name'   => 'performance',
				'graphql_plural_name'   => 'performances',
				'supports'              => ['title', 'custom-fields'],
				'has_archive'           => true,
				'rewrite'               => true,
				'query_var'             => true,
				'menu_position'         => null,
				'menu_icon'             => 'dashicons-star-half',
				'show_in_rest'          => true,
				'rest_base'             => self::POST_TYPE,
				'rest_controller_class' => 'WP_REST_Posts_Controller',
			]
		);
	}

	/**
	 * Sets the post updated messages for the `performance` post type.
	 *
	 * @param  array $messages Post updated messages.
	 * @return array Messages for the `performance` post type.
	 */
	public function callboard_performance_updated_messages( $messages ) {
		global $post;

		$permalink = get_permalink( $post );

		$messages[self::POST_TYPE] = [
			0  => '', // Unused. Messages start at index 1.
			/* translators: %s: post permalink */
			1  => sprintf( __( 'Performance updated. <a target="_blank" href="%s">View Performance</a>', 'callboard' ), esc_url( $permalink ) ),
			2  => __( 'Custom field updated.', 'callboard' ),
			3  => __( 'Custom field deleted.', 'callboard' ),
			4  => __( 'Performance updated.', 'callboard' ),
			/* translators: %s: date and time of the revision */
			5  => isset( $_GET['revision'] ) ? sprintf( __( 'Performance restored to revision from %s', 'callboard' ), wp_post_revision_title( (int) $_GET['revision'], false ) ) : false, // phpcs:ignore WordPress.Security.NonceVerification.Recommended
			/* translators: %s: post permalink */
			6  => sprintf( __( 'Performance published. <a href="%s">View Performance</a>', 'callboard' ), esc_url( $permalink ) ),
			7  => __( 'Performance saved.', 'callboard' ),
			/* translators: %s: post permalink */
			8  => sprintf( __( 'Performance submitted. <a target="_blank" href="%s">Preview Performance</a>', 'callboard' ), esc_url( add_query_arg( 'preview', 'true', $permalink ) ) ),
			/* translators: 1: Publish box date format, see https://secure.php.net/date 2: Post permalink */
			9  => sprintf( __( 'Performance scheduled for: <strong>%1$s</strong>. <a target="_blank" href="%2$s">Preview Performance</a>', 'callboard' ), date_i18n( __( 'M j, Y @ G:i', 'callboard' ), strtotime( $post->post_date ) ), esc_url( $permalink ) ),
			/* translators: %s: post permalink */
			10 => sprintf( __( 'Performance draft updated. <a target="_blank" href="%s">Preview Performance</a>', 'callboard' ), esc_url( add_query_arg( 'preview', 'true', $permalink ) ) ),
		];

		return $messages;
	}

	/**
	 * Sets the bulk post updated messages for the `performance` post type.
	 *
	 * @param  array $bulk_messages Arrays of messages, each keyed by the corresponding post type. Messages are
	 *                              keyed with 'updated', 'locked', 'deleted', 'trashed', and 'untrashed'.
	 * @param  int[] $bulk_counts   Array of item counts for each message, used to build internationalized strings.
	 * @return array Bulk messages for the `performance` post type.
	 */
	public function callboard_performance_bulk_updated_messages( $bulk_messages, $bulk_counts ) {
		global $post;

		$bulk_messages[self::POST_TYPE] = [
			/* translators: %s: Number of Performances. */
			'updated'   => _n( '%s Performance updated.', '%s Performances updated.', $bulk_counts['updated'], 'callboard' ),
			'locked'    => ( 1 === $bulk_counts['locked'] ) ? __( '1 Performance not updated, somebody is editing it.', 'callboard' ) :
			/* translators: %s: Number of Performances. */
			_n( '%s Performance not updated, somebody is editing it.', '%s Performances not updated, somebody is editing them.', $bulk_counts['locked'], 'callboard' ),
			/* translators: %s: Number of Performances. */
			'deleted'   => _n( '%s Performance permanently deleted.', '%s Performances permanently deleted.', $bulk_counts['deleted'], 'callboard' ),
			/* translators: %s: Number of Performances. */
			'trashed'   => _n( '%s Performance moved to the Trash.', '%s Performances moved to the Trash.', $bulk_counts['trashed'], 'callboard' ),
			/* translators: %s: Number of Performances. */
			'untrashed' => _n( '%s Performance restored from the Trash.', '%s Performances restored from the Trash.', $bulk_counts['untrashed'], 'callboard' ),
		];

		return $bulk_messages;
	}
}

$callboard_cpt = new Callboard_CPT();
